buildscript {
    ext {
        springBootVersion = "1.5.9.RELEASE"
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.4.0"
        classpath "info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.1.9"
        classpath "org.liquibase:liquibase-gradle-plugin:1.2.4"
    }
}

apply plugin: "java"
apply plugin: "groovy"
apply plugin: "idea"
apply plugin: "org.springframework.boot"
apply plugin: "com.github.kt3k.coveralls"
apply plugin: "checkstyle"
apply plugin: "jacoco"
apply plugin: "info.solidsoft.pitest"
apply plugin: 'org.liquibase.gradle'

jar {
    baseName = "blog"
    version = "0.1.0"
}

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

idea {
    module {
        sourceDirs += file("generated/")
    }
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

dependencies {
    // Spring
    compile "javax.inject:javax.inject:1"
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-data-jpa"
    compile "org.springframework.boot:spring-boot-starter-aop:1.5.8.RELEASE"
    compile "org.springframework.boot:spring-boot-starter-test"
    compile "org.springframework.boot:spring-boot-starter-security"
    compile "org.springframework.boot:spring-boot-starter-mail"
    compile "org.springframework.boot:spring-boot-starter-integration"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-remote-shell"

    // db
    compile "com.h2database:h2:1.4.196"
    compile "net.sf.ehcache:ehcache-core:2.6.11"
    compile "com.mysema.querydsl:querydsl-jpa:3.7.4"
    compile "com.mysema.querydsl:querydsl-apt:3.7.4:jpa"
    compile "org.liquibase:liquibase-core"

    // Swagger
    compile "io.springfox:springfox-swagger2:2.7.0"
    compile "io.springfox:springfox-swagger-ui:2.7.0"

    // utils
    compile "org.codehaus.jackson:jackson-core-asl:1.9.13"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.3"
    compile "org.apache.commons:commons-lang3:3.6"
    compile "org.projectlombok:lombok:1.16.18"
    compile "com.google.guava:guava:23.5-jre"

    // test
    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile "org.springframework.security:spring-security-test:5.0.0.RELEASE"
    testCompile "org.spockframework:spock-core:1.1-groovy-2.4"
    testCompile "org.spockframework:spock-spring:1.1-groovy-2.4"
    testCompile "com.blogspot.toomuchcoding:spock-subjects-collaborators-extension:1.2.2"
    testRuntime "cglib:cglib-nodep:3.2.5"
}

checkstyle {
    toolVersion = "6.5"
}

jacoco {
    toolVersion = "0.7.9"
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

pitest {
    targetClasses = ['com.dawidkotarba.*']
    threads = 4
    outputFormats = ['XML', 'HTML']
}

tasks.coveralls {
    dependsOn "check"
}

task stage(dependsOn: ["build", "clean"])
build.mustRunAfter clean
task wrapper(type: Wrapper) {
    gradleVersion = "2.3"
}